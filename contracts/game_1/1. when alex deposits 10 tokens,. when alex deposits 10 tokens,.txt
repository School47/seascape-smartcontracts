1. when alex deposits 10 tokens,
    update(session id, owner, amount) {
        _session
        _balance

        i calculate previous claimed rewards
        (session.claimedPerToken += (now - session.lastInterestUpdate) * session.interestPerToken)
        i add amount of deposits to session.amount
        i record that interestPerToken is 0.1 CWS (rewardUnit/amount) in session.interestPerToken
        i update the session.lastInterestUpdate to now
        also need to attach to alex, that previous earning (session.claimedPerToken) is 0.
    }

    // for example:
    session.claimedPerToken += (2:00 - 2:00) * 0;
    session.amount += amount; // 10
    session.interestPerToken = session.rewardUnit / session.amount; // 0.1
    session.lastInterestUpdate = 2:00

    balance[alex].claimedPerToken = claimedPerToken // 0


    // 10 seconds after, medet deposits money
    session.claimedPerToken += (2:00:10 - 2:00) * 0.1; // 1 CWS
    session.amount += amount; // 20
    session.interestPerToken = session.rewardUnit / session.amount; // 0.2
    session.lastInterestUpdate = 2:00:10

    balance[medet].claimedPerToken = claimedPerToken // 1 CWS

    // 20 seconds after, alex withdraws 10 tokens
    // now, calculate results to claim
    let claimedPerToken = session.claimedPerToken + (2:00:20 - 2:00:10) * session.interestPerToken (0.2) // += 0.5
    return (balance.amount * claimedPerToken) - balance.claimedPerToken
    crowns.transfer(interest)

    session.claimedPerToken += (2:00:20 - 2:00:10) * 0.2; // += 0.5
    session.amount -= amount; // 10
    session.interestPerToken = session.rewardUnit / session.amount; // 0.1
    session.lastInterestUpdate = 2:00:20

    balance[alex].claimedPerToken = claimedPerToken // 1.5 CWS
