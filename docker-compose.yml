version: "3.2"

services:
  smartcontract:
    build:
      context: .
    container_name: "smartcontract"
    volumes:
      - type: bind
        source: ./
        target: /home/node/app/
      - /home/node/app/node_modules
    ports:
      - "8089:8000"
    networks:
      - net
    entrypoint: sh
    command: '-c "sleep 1d"'
    links:
      - local-node
      - ipfs
    env_file:
      - ./.env
    cap_add:
      - IPC_LOCK
  local-node:
    build:
      context: ./ganache
    container_name: "local-node"
    ports:
      - 8545:8545
    networks:
      - net
    env_file:
      - ./.env
    volumes:
      - type: bind
        source: ./ganache/ganache_with_accounts.sh
        target: /app/ganache_with_accounts.sh
    command: "bash ganache_with_accounts.sh"
  graph-node:
    image: graphprotocol/graph-node
    container_name: graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'rinkeby:https://rinkeby.infura.io/v3/23559084cbf347d1b948f225c88a6fa0'
      RUST_LOG: info
    networks:
        - net
    volumes:
      - type: bind
        source: ./
        target: /app/
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    container_name: ipfs
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs
    networks:
      - net
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - net
networks:
  net:
